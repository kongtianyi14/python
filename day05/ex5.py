"""
    浅拷贝：复制过程中,只复制一层变量,不会复制深层变量绑定的对象的复制过程。
    深拷贝：复制整个依懒的变量。
"""
# list01 = ["北京", "上海"]
# list02 = list01
# list01[0] = "广东"
# list03 = list01
# list01[-1] = "深圳"
# print(list03)#?
"""
    深拷贝
"""
# import copy
# # 准备拷贝工具
# list01 = [10,[20,30,40]]
# list02 = copy.deepcopy(list01)
# list02[0] = 100
# list02[1][0] = 200
# print(list02)


import copy
list01 = ["北京",["上海","深圳"]]
list02 = list01
list03 = list01[:]
list04 = copy.deepcopy(list01)
list04[0] = "北京04"
list04[1][1] = "深圳04"
print(list01) # ?

list03[0] = "北京03"
list03[1][1] = "深圳03"
print(list01) # ?
list02[0] = "北京02"
list02[1][1] = "深圳02"
print(list01) # ?


# 总结一下，其实就分为三种情况
# 第一种：    直接 =
#             这种情况下两边的数据完全的互相影响
#             包括了其中是多为列表的情况
# 第二种：
#                 = [:]
#             这种情况是将数据复制过去，对第一层的操作完全没有影响，但是如果涉及到了
#             第二层（其实就是指里面还有列表的情况）的处理，还是会两边互相影响。
# 第三种：
#                 import copy
#                         = copy.deepcopy( )
#             这种情况只是将数据拷贝过去，然后完全独立。